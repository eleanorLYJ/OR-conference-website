services:
  nextjs:
    build: .
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    environment:
      - NODE_ENV=development
    env_file:
      - ./.env.local
    networks:
      - app-network
    ports:
      - "3000:3000"
    depends_on:
      - db
    restart: on-failure  # Use `restart` instead of `restart_policy`

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Read-only for configuration
      # - ./letsencrypt:/usr/share/nginx/html/acme  # Folder for validation challenges
      # - ./certbot-etc:/etc/letsencrypt:ro    # Persistent storage for certificates (new)
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nextjs
    networks:
      - app-network

  db:
    image: postgres:13
    env_file:
      - .env.local
    environment:
      POSTGRES_DB: ncku_iim
      POSTGRES_USER: ncku_iim
      POSTGRES_PASSWORD: ncku_iim
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
    
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: nckulin625@example.com
      PGADMIN_DEFAULT_PASSWORD: nckulin625-password
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
    external: true
