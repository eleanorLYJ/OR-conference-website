---
import Layout from '@layouts/base.astro'
import YellowBackground from '@components/YellowBackground.astro';
import Technologies from '@components/Technologies.astro'
import Button from '@components/Button.astro';
import {UserTicketInfo} from '@components/UserTicketInfo'
import {LoginButton, LogoutButton} from '@components/LoginButton';
import {UserTicketNumber} from '@components/UserTicketNumber';
import CalendarScriptAndStyles from '@components/CalendarScriptAndStyles.astro';

import React from '@components/logos/React.astro';
import JavaScript from '@components/logos/JavaScript.astro';
import Angular from '@components/logos/Angular.astro';
import Svelte from '@components/logos/Svelte.astro';
import Vue from '@components/logos/Vue.astro';
import Bun from '@components/logos/Bun.astro';
import Vite from '@components/logos/Vite.astro';
import Nextjs from '@components/logos/Nextjs.astro';
import VSCode from '@components/logos/VSCode.astro';
import TypeScript from '@components/logos/TypeScript.astro';
import GitHub from '@components/logos/GitHub.astro';
import Node from '@components/logos/Node.astro';

import {supabase} from '../../lib/supabase.js'
import ClientSideEffects from '@components/ClientSideEffects';

// use supabase to get the ticket
const { username } = Astro.params
const animate = Astro.url.searchParams.get('static') === null

const { error, data } = await supabase
  .from('ticket')
  .select('*')
  .eq('user_name', username)

if (error) {
  // hacer un redirect a otra pagina
  console.error(error)
}

const [ticketData] = data

const {
  image,
  user_name: userName,
  ticket_number: ticketNumber,
  user_fullname: userFullName
} = ticketData

const flavour = ticketData?.flavour || 'javascript'

const ogImage = `https://ljizvfycxyxnupniyyxb.supabase.co/storage/v1/object/public/tickets/ticket_${userName}.png?v=${Date.now()}`

const techs = [{
  tech: 'javascript',
  Icon: JavaScript
}, {
  tech: 'typescript',
  Icon: TypeScript
}, {
  tech: 'react',
  Icon: React
}, {
  tech: 'vue',
  Icon: Vue
}, {
  tech: 'svelte',
  Icon: Svelte
}, {
  tech: 'angular',
  Icon: Angular
}, {
  tech: 'node',
  Icon: Node,
}, {
  tech: 'github',
  Icon: GitHub
}, {
  tech: 'bun',
  Icon: Bun
}, {
  tech: 'vite',
  Icon: Vite
}, {
  tech: 'vscode',
  Icon: VSCode
}, {
  tech: 'nextjs',
  Icon: Nextjs
}]

const FlavourIcon = techs.find(({tech}) => tech === flavour)?.Icon ?? JavaScript
---

<style>
  :root {
    --border-card: #0000009e;
    --background-card: #ffffff5e;
    --text-card: #000;
  }
</style>



<Layout image={ogImage}>
  <wc-toast></wc-toast>
  <YellowBackground>
    <CalendarScriptAndStyles />
    <ClientSideEffects image={image} userName={userName} client:visible />
    <LogoutButton client:visible />
    <div class="grid place-content-center min-h-[110vh] pt-10 pb-20">
      <Technologies />

      <div class="grid xl:grid-cols-[minmax(900px,_1fr)_250px] m-auto max-w-7xl">
        <div class="flex flex-col items-center justify-center">
          <div class="atropos p-8 w-full m-auto sm:w-[480px] md:w-[800px] md:aspect-[1.91:1]">

            <div class="atropos-scale">
              <div class="atropos-rotate">
                <div class="atropos-inner transition-all duration-700 relative p-2 border-2 rounded-md shadow-2xl border-[color:var(--border-card)] bg-[color:var(--background-card)] backdrop-blur-sm flex flex-col">
                  <div class="atropos-inner transition-all duration-700 relative p-4 border-4 rounded-md shadow-2xl border-[color:var(--border-card)] bg-[color:var(--background-card)] backdrop-blur-sm flex flex-col">

                    <div class="flex flex-col-reverse justify-between sm:flex-row">
                      <div>
                        <UserTicketInfo
                          userName={userName}
                          userFullName={userFullName}
                        />
                      </div>
                      <div class="flex items-center justify-center pb-2">
                        <h4 class="transition-all duration-700 top-0 right-0 flex flex-col font-mono text-2xl font-bold opacity-90 text-[color:var(--text-card)]">
                          <div class="block text-xs font-black uppercase text-black/90">Ticket number</div>
                          <UserTicketNumber animate={animate} ticketNumber={ticketNumber} client:visible />
                        </h4>
                      </div>
                    </div>

                    <h1
                      class='pt-10 m-0 mx-auto font-black leading-none text-center text-transparent text-4xl bg-clip-text bg-gradient-to-r from-gray-700 via-gray-900 to-black sm:text-[4rem] md:text-7xl'
                      data-atropos-offset="2"
                    >
                      #miduConf
                    </h1>

                    <div class="flex items-center justify-center pt-2 sm:pt-4 md:pt-0" data-atropos-offset="5">
                      <h2 class="inline-block w-40 px-3 py-1 text-xs font-bold text-center text-white rounded-full md:w-2/3 md:text-lg bg-black/90">
                        SEPTIEMBRE 13 • Online • 5PM CET
                      </h2>
                    </div>

                    <h3 data-atropos-offset="5" class="flex flex-col items-center justify-center pt-6 pb-6 text-2xl font-bold text-center text-transparent bg-clip-text bg-gradient-to-r from-purple-900 to-purple-500 md:flex-row">
                      <svg class="w-16 h-16 pr-2 text-purple-900" viewBox="0 0 24 24">
                        <path fill="currentColor" d="M11.571 4.714h1.715v5.143H11.57zm4.715 0H18v5.143h-1.714zM6 0 1.714 4.286v15.428h5.143V24l4.286-4.286h3.428L22.286 12V0zm14.571 11.143-3.428 3.428h-3.429l-3 3v-3H6.857V1.714h13.714Z">
                        </path>
                      </svg>
                      <div class="flex flex-col items-center justify-center leading-none md:items-start">
                        <span class="block -mb-1 text-lg text-black">Streaming en</span>
                        <a href='https://twitch.tv/midudev' rel="noopener" target='_blank'>twitch.tv/midudev</a>
                      </div>
                    </h3>

                    <div id="card-icon" class="absolute opacity-30 top-20 -left-32 w-96 h-96 -z-10 contrast-200">
                      <FlavourIcon />
                    </div>

                  </div>
                </div>
              </div>
            </div>

        </div>

          <div class="flex justify-center w-full py-10">
            <div class="flex flex-col items-center justify-center gap-4 md:flex-row w-72 sm:w-80 md:flex md:w-full">
              <Button id="share-twitter" openInNewWindow flavour="twitter" text="Compartir en Twitter" />
              <Button id="add-to-calendar" flavour="calendar" text="Añadir al Calendario" />
              <Button id="copy-link" flavour="link" text="Copiar enlace" />
            </div>
          </div>
        </div>

        <div id="get-your-ticket" class="relative flex flex-col justify-center hidden h-auto">
          <div>
            <LoginButton redirect={false} client:visible />
          </div>
        </div>

        <div id="select-flavour" class="relative flex flex-col justify-center hidden h-auto p-8 lg:p-0">
          <div class="relative w-full grid-cols-2 p-2 text-lg font-bold text-center text-gray-900 no-underline whitespace-no-wrap align-middle bg-white border-2 border-gray-900 border-solid rounded-md shadow-xs select-none hover:shadow-xs focus:shadow-xs">
            <div class="-z-10 w-full h-full bg-gray-900 ml-0.5 mt-0.5 rounded-lg absolute left-0 top-0"></div>
            <h3 class="text-lg text-center">Elige tu sabor de ticket</h3>
            <ul id="select" class="flex flex-wrap items-center justify-center">

              {techs.map(({tech, Icon}) => {
                return (
                <li>
                  <button data-tech={tech} class={`button-ticket ${flavour === tech ? 'flavour-selected' : ''}`} >
                    <Icon />
                  </button>
                </li>
                )
              })}

            </ul>
          </div>
        </div>

      </div>
    </div>

  </YellowBackground>
</Layout>

<style>
  .atropos{position:relative;display:block;perspective:1200px;transform:translate3d(0,0,0)}.atropos-rotate-scroll-x,.atropos-rotate-scroll-y,.atropos-rotate-touch{-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.atropos-rotate-touch-scroll-y{touch-action:pan-y}.atropos-rotate-touch-scroll-x{touch-action:pan-x}.atropos-rotate-touch{touch-action:none}.atropos-rotate,.atropos-scale{width:100%;height:100%;transform-style:preserve-3d;transition-property:transform;display:block}.atropos-highlight,.atropos-shadow{position:absolute;pointer-events:none;transition-property:transform,opacity;display:block;opacity:0}.atropos-shadow{z-index:-1;background:#000;left:0;top:0;width:100%;height:100%;filter:blur(30px)}.atropos-highlight{left:-50%;top:-50%;width:200%;height:200%;background-image:radial-gradient(circle at 50%,rgba(255,255,255,.25),transparent 50%);z-index:0}.atropos-rotate{position:relative}.atropos-inner{width:100%;height:100%;position:relative;overflow:hidden;transform-style:preserve-3d;transform:translate3d(0,0,0);display:block}.atropos-active{z-index:1}.atropos-active .atropos-shadow{opacity:1!important}[data-atropos-offset]{transition-property:transform}[data-atropos-opacity]{transition-property:opacity}[data-atropos-offset][data-atropos-opacity]{transition-property:transform,opacity}
</style>

<script type="module">
  // @ts-nocheck
  /* eslint-disable */
  !function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Atropos=e()}(this,(function(){"use strict";function t(){return(t=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var a in o)Object.prototype.hasOwnProperty.call(o,a)&&(t[a]=o[a])}return t}).apply(this,arguments)}var e=function(t,e){return t.querySelector(e)},o=function(t){void 0===t&&(t={});var e={};return Object.keys(t).forEach((function(o){void 0!==t[o]&&(e[o]=t[o])})),e};return function(a){void 0===a&&(a={});var n,r,i,s,c,u,p,l,d,f,v,h=a,m=h.el,y=h.eventsEl,g={__atropos__:!0,params:t({alwaysActive:!1,activeOffset:50,shadowOffset:50,shadowScale:1,duration:300,rotate:!0,rotateTouch:!0,rotateXMax:15,rotateYMax:15,rotateXInvert:!1,rotateYInvert:!1,stretchX:0,stretchY:0,stretchZ:0,commonOrigin:!0,shadow:!0,highlight:!0,onEnter:null,onLeave:null,onRotate:null},o(a||{})),destroyed:!1,isActive:!1},M=g.params,x=[];!function t(){v=requestAnimationFrame((function(){x.forEach((function(t){if("function"==typeof t)t();else{var e=t.element,o=t.prop,a=t.value;e.style[o]=a}})),x.splice(0,x.length),t()}))}();var w,O=function(t,e){x.push({element:t,prop:"transitionDuration",value:e})},b=function(t,e){x.push({element:t,prop:"transitionTimingFunction",value:e})},T=function(t,e){x.push({element:t,prop:"transform",value:e})},X=function(t,e){x.push({element:t,prop:"opacity",value:e})},Y=function(t,e,o,a){return t.addEventListener(e,o,a)},_=function(t,e,o,a){return t.removeEventListener(e,o,a)},L=function(t){var e=t.rotateXPercentage,o=void 0===e?0:e,a=t.rotateYPercentage,n=void 0===a?0:a,r=t.duration,i=t.opacityOnly,s=t.easeOut;(function(t,e){return t.querySelectorAll(e)})(m,"[data-atropos-offset], [data-atropos-opacity]").forEach((function(t){O(t,r),b(t,s?"ease-out":"");var e=function(t){if(t.dataset.atroposOpacity&&"string"==typeof t.dataset.atroposOpacity)return t.dataset.atroposOpacity.split(";").map((function(t){return parseFloat(t)}))}(t);if(0===o&&0===n)i||T(t,"translate3d(0, 0, 0)"),e&&X(t,e[0]);else{var a=parseFloat(t.dataset.atroposOffset)/100;if(Number.isNaN(a)||i||T(t,"translate3d("+-n*-a+"%, "+o*-a+"%, 0)"),e){var c=e[0],u=e[1],p=Math.max(Math.abs(o),Math.abs(n));X(t,c+(u-c)*p/100)}}}))},A=function(t,e){var o=m!==y;if(s||(s=m.getBoundingClientRect()),o&&!c&&(c=y.getBoundingClientRect()),void 0===t&&void 0===e){var a=o?c:s;t=a.left+a.width/2,e=a.top+a.height/2}var r,i=0,u=0,l=s,d=l.top,f=l.left,v=l.width,h=l.height;if(o){var g=c,w=g.top,Y=g.left,_=g.width,A=g.height,E=v/2+(f-Y),R=h/2+(d-w),I=t-Y,P=e-w;u=M.rotateYMax*(I-E)/(_-v/2)*-1,i=M.rotateXMax*(P-R)/(A-h/2),r=t-f+"px "+(e-d)+"px"}else{var j=v/2,D=h/2,F=t-f,C=e-d;u=M.rotateYMax*(F-j)/(v/2)*-1,i=M.rotateXMax*(C-D)/(h/2)}i=Math.min(Math.max(-i,-M.rotateXMax),M.rotateXMax),M.rotateXInvert&&(i=-i),u=Math.min(Math.max(-u,-M.rotateYMax),M.rotateYMax),M.rotateYInvert&&(u=-u);var S,k,q=i/M.rotateXMax*100,N=u/M.rotateYMax*100,B=(o?N/100*M.stretchX:0)*(M.rotateYInvert?-1:1),Z=(o?q/100*M.stretchY:0)*(M.rotateXInvert?-1:1),z=o?Math.max(Math.abs(q),Math.abs(N))/100*M.stretchZ:0;T(n,"translate3d("+B+"%, "+-Z+"%, "+-z+"px) rotateX("+i+"deg) rotateY("+u+"deg)"),r&&M.commonOrigin&&(S=n,k=r,x.push({element:S,prop:"transformOrigin",value:k})),p&&(O(p,M.duration+"ms"),b(p,"ease-out"),T(p,"translate3d("+.25*-N+"%, "+.25*q+"%, 0)"),X(p,Math.max(Math.abs(q),Math.abs(N))/100)),L({rotateXPercentage:q,rotateYPercentage:N,duration:M.duration+"ms",easeOut:!0}),"function"==typeof M.onRotate&&M.onRotate(i,u)},E=function(){x.push((function(){return m.classList.add("atropos-active")})),O(n,M.duration+"ms"),b(n,"ease-out"),T(r,"translate3d(0,0, "+M.activeOffset+"px)"),O(r,M.duration+"ms"),b(r,"ease-out"),u&&(O(u,M.duration+"ms"),b(u,"ease-out")),g.isActive=!0},R=function(t){if(l=void 0,!("pointerdown"===t.type&&"mouse"===t.pointerType||"pointerenter"===t.type&&"mouse"!==t.pointerType)){if("pointerdown"===t.type&&t.preventDefault(),d=t.clientX,f=t.clientY,M.alwaysActive)return s=void 0,void(c=void 0);E(),"function"==typeof M.onEnter&&M.onEnter()}},I=function(t){!1===l&&t.cancelable&&t.preventDefault()},P=function(t){if(M.rotate&&g.isActive){if("mouse"!==t.pointerType){if(!M.rotateTouch)return;t.preventDefault()}var e=t.clientX,o=t.clientY,a=e-d,n=o-f;if("string"==typeof M.rotateTouch&&(0!==a||0!==n)&&void 0===l){if(a*a+n*n>=25){var r=180*Math.atan2(Math.abs(n),Math.abs(a))/Math.PI;l="scroll-y"===M.rotateTouch?r>45:90-r>45}!1===l&&(m.classList.add("atropos-rotate-touch"),t.cancelable&&t.preventDefault())}"mouse"!==t.pointerType&&l||A(e,o)}},j=function(t){if(s=void 0,c=void 0,g.isActive&&!(t&&"pointerup"===t.type&&"mouse"===t.pointerType||t&&"pointerleave"===t.type&&"mouse"!==t.pointerType)){if("string"==typeof M.rotateTouch&&l&&m.classList.remove("atropos-rotate-touch"),M.alwaysActive)return A(),"function"==typeof M.onRotate&&M.onRotate(0,0),void("function"==typeof M.onLeave&&M.onLeave());x.push((function(){return m.classList.remove("atropos-active")})),O(r,M.duration+"ms"),b(r,""),T(r,"translate3d(0,0, 0px)"),u&&(O(u,M.duration+"ms"),b(u,"")),p&&(O(p,M.duration+"ms"),b(p,""),T(p,"translate3d(0, 0, 0)"),X(p,0)),O(n,M.duration+"ms"),b(n,""),T(n,"translate3d(0,0,0) rotateX(0deg) rotateY(0deg)"),L({duration:M.duration+"ms"}),g.isActive=!1,"function"==typeof M.onRotate&&M.onRotate(0,0),"function"==typeof M.onLeave&&M.onLeave()}},D=function(t){var e=t.target;!y.contains(e)&&e!==y&&g.isActive&&j()};return g.destroy=function(){g.destroyed=!0,cancelAnimationFrame(v),_(document,"click",D),_(y,"pointerdown",R),_(y,"pointerenter",R),_(y,"pointermove",P),_(y,"touchmove",I),_(y,"pointerleave",j),_(y,"pointerup",j),_(y,"lostpointercapture",j),delete m.__atropos__},"string"==typeof m&&(m=e(document,m)),m&&(m.__atropos__||(void 0!==y?"string"==typeof y&&(y=e(document,y)):y=m,Object.assign(g,{el:m}),n=e(m,".atropos-rotate"),r=e(m,".atropos-scale"),i=e(m,".atropos-inner"),m.__atropos__=g)),m&&y&&(M.shadow&&((u=e(m,".atropos-shadow"))||((u=document.createElement("span")).classList.add("atropos-shadow"),w=!0),T(u,"translate3d(0,0,-"+M.shadowOffset+"px) scale("+M.shadowScale+")"),w&&n.appendChild(u)),M.highlight&&function(){var t;(p=e(m,".atropos-highlight"))||((p=document.createElement("span")).classList.add("atropos-highlight"),t=!0),T(p,"translate3d(0,0,0)"),t&&i.appendChild(p)}(),M.rotateTouch&&("string"==typeof M.rotateTouch?m.classList.add("atropos-rotate-touch-"+M.rotateTouch):m.classList.add("atropos-rotate-touch")),e(m,"[data-atropos-opacity]")&&L({opacityOnly:!0}),Y(document,"click",D),Y(y,"pointerdown",R),Y(y,"pointerenter",R),Y(y,"pointermove",P),Y(y,"touchmove",I),Y(y,"pointerleave",j),Y(y,"pointerup",j),Y(y,"lostpointercapture",j),M.alwaysActive&&(E(),A())),g}})); /* eslint-enable */

  window.Atropos({
    el: '.atropos',
    activeOffset: 120,
    shadowScale: 5,
  });

</script>

<script type="module">
  import { toast } from 'https://cdn.skypack.dev/wc-toast'

  const shareTwitter = document.querySelector('#share-twitter')

  const messageTwitter = `¡Ya tengo mi ticket 🎟 para la #MiduConf!

Conferencia de Desarrollo y Programación Web.
¡Totalmente gratis!

➡ `

  const urlTwitter = new URL('https://twitter.com/intent/tweet');
  urlTwitter.searchParams.set('text', messageTwitter)
  urlTwitter.searchParams.set('url', window.location.href)

  shareTwitter.setAttribute('href', urlTwitter.toString())

  const copyLink = document.querySelector('#copy-link')

  copyLink.addEventListener('click', () => {
    navigator.clipboard.writeText(window.location.href)
      .then(() => {
        toast('¡Enlace copiado con éxito!', {
          icon: {
            type: 'success'
          }
        })
      })
    })
</script>

<script define:vars={{ tech: flavour }}>
  const styles = {
    react: {
      borderColor: '#007acca3',
      backgroundColor: '#1bceffee',
      textColor: '#e0f2ff'
    },
    vue: {
      borderColor: 'rgb(6 95 70 / 0.5)',
      backgroundColor: 'rgb(209 250 229 / 0.5)',
      textColor: 'rgb(16 185 129)'
    },
    svelte: {
      borderColor: '#be7b00',
      backgroundColor: '#ff3d0078',
      textColor: '#764c00'
    },
    angular: {
      borderColor: '#ae000075',
      backgroundColor: '#ff00004a',
      textColor: '#7d0000'
    },
    bun: {
      borderColor: 'rgba(239, 195, 128, 1)',
      backgroundColor: 'rgba(251, 240, 223, 0.86)',
      textColor: 'rgba(245, 182, 86, 1)'
    },
    vite: {
      borderColor: 'rgba(100, 108, 255, 1)',
      backgroundColor: '#afb3ffc2',
      textColor: '#4148bd'
    },
    vscode: {
      borderColor: 'rgba(0, 120, 215, 1)',
      backgroundColor: 'rgba(88, 181, 255, .35)',
      textColor: '#4148bd'
    },
    github: {
      borderColor: 'rgba(0, 0, 0, 1)',
      backgroundColor: 'rgba(255, 255, 255, .7)',
      textColor: '#111'
    },
    javascript: {
      borderColor: 'rgba(111, 111, 111, 1)',
      backgroundColor: 'rgba(255, 245, 58, 0.8)',
      textColor: '#111'
    },
    node: {
      borderColor: '#00ff50',
      backgroundColor: '#21573238',
      textColor: '#83CD29'
    },
    nextjs: {
      borderColor: '#000',
      backgroundColor: 'rgba(255, 255, 255, .8)',
      textColor: '#000'
    },
    typescript: {
      borderColor: '#007acc',
      backgroundColor: 'rgb(0 150 255 / 43%)',
      textColor: '#007acc'
    }
  }

  const updateCustomProperties = (tech) => {
    const {
      borderColor,
      backgroundColor,
      textColor
    } = styles[tech] ?? styles.javascript

    document.documentElement.style.setProperty('--border-card', borderColor)
    document.documentElement.style.setProperty('--background-card', backgroundColor)
    document.documentElement.style.setProperty('--text-card', textColor)
  }

  updateCustomProperties(tech)

  document.querySelectorAll('#select button').forEach(button => button.addEventListener('click', (event) => {
    const {currentTarget} = event

    const tech = currentTarget.getAttribute('data-tech')

    const currentActive = document.querySelector('#select .flavour-selected')

    currentActive?.classList.remove('flavour-selected')
    currentTarget.classList.add('flavour-selected')

    updateCustomProperties(tech)

    document.querySelector('#card-icon').innerHTML = currentTarget.innerHTML
  }))
</script>